{"version":3,"sources":["Tmdb.js","components/MovieRow/index.js","components/FeaturedMovie.js/index.js","components/Header/index.js","App.js","index.js"],"names":["API_KEY","process","basicFetch","endpoint","a","fetch","req","json","getHomeList","slug","title","items","getMovieInfo","movieId","type","info","useState","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","style","fontSize","listW","results","length","marginLeft","width","map","movie","key","src","poster_path","alt","original_title","item","firstDate","Date","first_air_date","genres","i","push","name","description","overview","substring","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","href","join","black","movieList","setMovieList","featuredData","setFeaturedData","blackHeader","setBlackHeader","useEffect","loadAll","Tmdb","list","originals","filter","randomChosen","floor","random","chosen","id","chosenInfo","scrollListener","scrollY","addEventListener","removeEventListener","Header","MovieRow","role","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.395ab9b1.chunk.js","sourcesContent":["const API_KEY = process.env.REACT_APP_API_KEY\r\nconst API_BASE = 'https://api.themoviedb.org/3'\r\n\r\n\r\nconst basicFetch = async endpoint => {\r\n    const req = await fetch( `${API_BASE}${endpoint}` )\r\n    const json = await req.json()\r\n    return json\r\n}\r\n\r\n\r\nexport default {\r\n    getHomeList: async () => {\r\n        return [\r\n            {\r\n                slug: 'originals',\r\n                title: 'Originais do Netflix',\r\n                items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title: 'Recomendados para Você',\r\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'toprated',\r\n                title: 'Em Alta',\r\n                items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'action',\r\n                title: 'Ação',\r\n                items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'comedy',\r\n                title: 'Comédia',\r\n                items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'horror',\r\n                title: 'Terror',\r\n                items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'documentary',\r\n                title: 'Documentários',\r\n                items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n        ]\r\n    },\r\n\r\n    getMovieInfo: async (movieId, type) => {\r\n        let info = {}\r\n\r\n        if(movieId) {\r\n            switch(type) {\r\n                case 'movie':\r\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`)\r\n\r\n                break\r\n                case 'tv':\r\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`)\r\n                break\r\n                default:\r\n                    info = null\r\n                break\r\n            }\r\n        }\r\n        return info\r\n    }\r\n}","import react, { useState } from \"react\"\r\nimport './styles.css'\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore'\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext'\r\n\r\nexport default ({ title, items }) => {\r\n    const [scrollX, setScrollX] = useState(0)\r\n\r\n    const handleLeftArrow = () => {\r\n        let x = scrollX + Math.round(window.innerWidth / 2)\r\n        if(x > 0) x = 0\r\n        setScrollX(x)\r\n    }\r\n    const handleRigthArrow = () => {\r\n        let x = scrollX - Math.round(window.innerWidth / 2)\r\n        let listW = items.results.length * 150\r\n        if((window.innerWidth - listW) > x) {\r\n            x = window.innerWidth - listW - 60\r\n        }\r\n        setScrollX(x)\r\n    }\r\n    return (\r\n        <div className=\"movieRow\">\r\n            <h2>{title}</h2>\r\n            <div className=\"movieRow--left\" onClick={handleLeftArrow}>\r\n                <NavigateBeforeIcon style={{ fontSize: 50 }} />\r\n            </div>\r\n            <div className=\"movieRow--rigth\" onClick={handleRigthArrow}>\r\n                <NavigateNextIcon style={{ fontSize: 50 }} />\r\n            </div>\r\n            <div className=\"movieRow--listarea\">\r\n                <div className=\"movieRow--list\" style={{\r\n                    marginLeft: scrollX,\r\n                    width: items.results.length * 150\r\n                }}>\r\n                    {items.results.length > 0 && items.results.map((movie, key) => (\r\n                        <div className=\"movieRow--item\" key={key}>\r\n                            <img src={`http://image.tmdb.org/t/p/w300${movie.poster_path}`} alt={movie.original_title} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import react from \"react\";\r\nimport './styles.css'\r\n\r\nexport default ({ item }) => {\r\n\r\n    let firstDate = new Date(item.first_air_date)\r\n    let genres = []\r\n    for(let i in item.genres) {\r\n        genres.push(item.genres[i].name)\r\n    }\r\n\r\n    let description = item.overview\r\n    if(description.length > 200) description = `${description.substring(0, 200)}...`\r\n\r\n    return (\r\n        <section className=\"featured\" style={{\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n        }}>\r\n            <div className=\"featured--vertical\">\r\n                <div className=\"featured--horizontal\">\r\n                    <div className=\"featured--name\">{item.original_name}</div>\r\n                    <div className=\"featured--info\">\r\n                        <div className=\"featured--points\">{item.vote_average} pontos</div>\r\n                        <div className=\"featured--year\">{firstDate.getFullYear()}</div>\r\n                        <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\r\n                    </div>\r\n                    <div className=\"featured--description\">{description}</div>\r\n                    <div className=\"featured--buttons\">\r\n                        <a href={`#`} className=\"featured--watchbutton\">▶ Assistir</a>\r\n                        <a href={`#`} className=\"featured--mylistbutton\">+ Minha Lista</a>\r\n                    </div>\r\n                    <div className=\"featured--genres\"> <strong>Gêneros:</strong> {genres.join(', ')}</div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}","import react from \"react\";\r\nimport './styles.css'\r\n\r\nexport default ({ black }) => {\r\n    return (\r\n        <header className={black ? \"black\" : \"\"}>\r\n            <div className=\"header--logo\">\r\n                <a href=\"/\">\r\n                    <img src=\"./assets/netflix-logo.png\" alt=\"Netflix\"/>\r\n                </a>\r\n            </div>\r\n            <div className=\"header--user\">\r\n                <a href=\"/\">\r\n                    <img src=\"./assets/logo-user.png\" alt=\"Usuário\"/>\r\n                </a>\r\n            </div>\r\n        </header>\r\n    )\r\n}","import Tmdb from \"./Tmdb\"\r\nimport { useEffect, useState } from \"react\"\r\nimport MovieRow from \"./components/MovieRow\"\r\nimport FeaturedMovie from \"./components/FeaturedMovie.js\"\r\nimport Header from \"./components/Header\"\r\nimport './App.css'\r\n//\r\nexport default () => {\r\n\r\n  const [movieList, setMovieList] = useState([])\r\n  const [featuredData, setFeaturedData] = useState(null)\r\n  const [blackHeader, setBlackHeader] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const loadAll = async () => {\r\n      let list = await Tmdb.getHomeList()\r\n      setMovieList(list)\r\n\r\n      let originals = list.filter(i => i.slug === 'originals')\r\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1))\r\n      let chosen = originals[0].items.results[randomChosen]\r\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv')\r\n      setFeaturedData(chosenInfo)\r\n    }\r\n\r\n    loadAll()\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const scrollListener = () => {\r\n      if (window.scrollY > 10) {\r\n        setBlackHeader(true)\r\n      } else {\r\n        setBlackHeader(false)\r\n      }\r\n    }\r\n\r\n    window.addEventListener('scroll', scrollListener)\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', scrollListener)\r\n    }\r\n  }, [])\r\n  return (\r\n    <div className=\"page\">\r\n      <Header black={blackHeader} />\r\n      {featuredData &&\r\n        <FeaturedMovie item={featuredData} />\r\n      }\r\n      <section className=\"lists\">\r\n        {movieList.map((item, key) => (\r\n          <MovieRow key={key} title={item.title} items={item.items} />\r\n        ))}\r\n      </section>\r\n      <footer>\r\n        Desenvolvido com <span role=\"img\" aria-label=\"coração\">❤️</span> por Guilherme Schubert Medeiros<br />\r\n        Direitos de imagem para Netflix<br />\r\n        Dados obtidos do site Themoviedb.org\r\n      </footer>\r\n      {movieList <= 0 &&\r\n        <div className=\"loading\">\r\n          <img src=\"./assets/Netflix_LoadTime.gif\" alt=\"Carregando\"></img>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}